ls || ll 	-> 查看当前目录里有哪些文件和文件夹，也可以用dir。直接输入就可以，前面不用加git

tab -> 自动补全

cd.. -> 返回上一层

git clone 仓库地址  -> 把远程仓库的项目克隆到本地	

shift+insert或者ctrl+v  -> 粘贴

进入项目（出现了master，就说明在版本控制范围）


git的三个区
	工作区
	暂存区
		作为过度层
		避免误操作
		保护工作区和版本区
		分支处理
	版本区（库）
	
git status -> 查看状态

git add 文件名 -> 把项目从工作区添加到暂存区

快捷方式：git add . (一次性将一个或多个文件放到暂存区)

git commit -m "注释" -> 把项目从暂存区添加到版本区

快捷方式：git commit -a -m "注释" （直接将文件从工作区添加到版本区）
注意：新建文件第一次要放到暂存区才能使用这个命令！！！

git log -> 查看版本号

clear -> 清屏

git push origin master -> 从本地传到远程仓库

==========================================================

查看每个区域的差异
	
		git diff -> 工作区与暂存区的差异
		
		git diff --cached -> 暂存区与版本区的差异
		
		git diff master -> 工作区与版本区的差异
		
=============================================================
	撤销
		git reset HEAD <file.name> -> 暂存区撤销到工作区
		
		git checkout -- <file.name> -> 工作区代码还原暂存区或版本区
		注意:暂存区有内容先还原暂存区，没有就直接版本区
		如果有2个以上文件，一个提交到版本库了，另一个忘记提交，可以先将没提交的文件拉到缓存区，然后通过git commit -m “注释” --amend 撤销回来，最后自动一次性提交暂存区中的文件，这个时候多个文件就合并成了一个版本，之前那个版本就被覆盖为当前的版本，git log查看是否提交成功
====================================================================================================
	删除
		git rm <file.name> -> 工作区手动删除之后也想删除暂存区
		
		git rm -f <file.name> -> 删除工作区及暂存区的文件
		
		git rm -rf 文件夹名 -> 删除文件夹
		
=========================================================================
	恢复
		git reset --hard 版本ID -> 回滚整个历史纪录，还原整个版本
		
		git checkout 版本ID 文件名 -> 指定回滚单个文件
		
		git reset --hard HEAD^ -> 回滚到上一个版本（多次写入会以当前版本的上一个版本回滚。输出第一次为最近的记录，第二次就是倒数第二个历史记）
		
		git reset --hard HEAD~1 -> 回滚到倒数第三个历史纪录（跳过了2个）
		
		注意：如果git log查看不到版本ID，那么可以通过git reflog来查看已经操作的历史纪录
================================================================================================
	同步远程仓库
		git remote -> 查看当前远程仓库的名字（默认为origin）
		
		git remote -v -> 查看远程仓库对应上传下载的地址
		
		git remote add -> 创建仓库的名字
		
		git push origin master -> 将版本库中的文件提交到远程仓库
		
		

		




















